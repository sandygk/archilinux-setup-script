#!/bin/bash

noColor="\033[0m"
green="\033[0;32m"
red="\033[0;31m"
greenEcho() {
  echo -e "${green}$1${noColor}"
}
redEcho() {
  echo -e "${red}$1${noColor}"
}

readPassword() {
  local enterPasswordMessage=$1
  local firstPassword secondPassword
  while true; do
    greenEcho "$enterPasswordMessage"
    read -s firstPassword
    if [ -z "$firstPassword" ]; then
      redEcho "The password cannot be empty, try again"
      continue
    fi
    greenEcho "Confirm password:"
    read -s secondPassword
    [ "$firstPassword" = "$secondPassword" ] && break
    redEcho "The passwords must match, try again"
  done
  password="$firstPassword"
}

readYesOrNo() {
  local question=$1
  while true; do
    read -p "$1\n" answer
    case "$answer" in
      y|Y|n|N ) break;;
      * ) echo "Please type either 'y' or 'n'";;
    esac
  done
}

greenEcho "Enter boot partition (e.g. sda1):"; read bootPartition
greenEcho "Enter root partition (e.g. sda2):"; read rootPartition
greenEcho "Enter computer name:"; read computerName
readPassword "Enter root password:"; rootPassword=$password
greenEcho "Enter user name:"; read userName
readPassword "Enter user password:"; userPassword=$password
readYesOrNo "Is this a laptop?"; isLaptop=$answer

greenEcho "Verifing the boot mode..."
if [ -z "$(ls -A /sys/firmware/efi/efivars)" ]; then
  redEcho "It looks like the system was booted in BIOS or CSM mode, exiting with errors..."
  exit 1
fi

greenEcho "Updating the system clock..."
timedatectl set-ntp true
if timedatectl | grep -q "NTP service: actived"; then
  redEcho "There was an error updating the system clock"
  exit 1
fi

greenEcho "Formatting partitions..."
umount /mnt/boot
umount /mnt
mkfs.fat -F32 /dev/"$bootPartition"
mkfs.ext4 -F /dev/"$rootPartition"

greenEcho "Mounting partitions..."
mount /dev/"$rootPartition" /mnt
mkdir /mnt/boot
mount /dev/"$bootPartition" /mnt/boot

greenEcho "Installing Arch Linux and the core packages..."
pacstrap /mnt base linux linux-firmware base-devel

greenEcho "Configuring fstab..."
genfstab -U /mnt >> /mnt/etc/fstab

greenEcho "Seting up time zone..."
ln -sf /mnt/usr/share/zoneinfo/America/New_York /mnt/etc/localtime
arch-chroot /mnt hwclock --systohc

greenEcho "Configuring localization..."
echo "en_US.UTF-8 UTF-8
en_US ISO-8859-1" > /mnt/etc/locale.gen
echo 'TLANG=en_US.UTF-8' > /mnt/etc/locale.conf

greenEcho "Setting root's password..."
echo -e "$rootPassword\n$rootPassword" | arch-chroot /mnt passwd

greenEcho "Adding user $userName..."
arch-chroot /mnt useradd -m -g wheel $userName
sed -i "/^# %wheel ALL=(ALL) NOPASSWD: ALL/ c%wheel ALL=(ALL) NOPASSWD: ALL" /mnt/etc/sudoers

greenEcho "Setting $userName's password..."
echo -e "$userPassword\n$userPassword" | arch-chroot /mnt passwd $userName

greenEcho "Configuring network..."
arch-chroot /mnt pacman -Syu --noconfirm dialog wpa_supplicant dhcpcd netctl networkmanager
echo "$computerName" > /mnt/etc/hostname
echo "127.0.0.1	localhost
::1 localhost
127.0.1.1	$computerName.localdomain	$computerName" > /mnt/etc/locale.gen

greenEcho "Configuring GRUB..."
arch-chroot /mnt pacman -Syu --noconfirm grub efibootmgr os-prober
arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=arch
arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

greenEcho "Installing x server"
arch-chroot /mnt pacman -Syu --noconfirm xorg-server xorg-xinit xorg-xrandr xorg-xsetroot
echo "allowed_users=anybody
needs_root_rights=yes" > /mount/etc/X11/Xwrapper.config

greenEcho "Installing windows manager..."
arch-chroot /mnt pacman -Syu --noconfirm awesome

greenEcho "Enabling autologin for $userName..."
mkdir /mnt/etc/systemd/system/getty@tty1.service.d
echo "[Service]
ExecStart=
ExecStart=-/usr/bin/agetty --autologin $userName --noclear %I $TERM" > /mnt/etc/systemd/system/getty@tty1.service.d/override.conf

greenEcho "Downloading dotfiles"
arch-chroot /mnt pacman -Syu --noconfirm git
arch-chroot /mnt \
  bash -c \
    "su $userName -c \
      \" \
      cd ~ && \
      git clone https://github.com/sandygk/dotfiles.git && \
      cp -a dotfiles/. ~ && \
      rm -rf dotfiles
      \" \
    "

greenEcho "Installing yay..."
arch-chroot /mnt pacman -Syu --noconfirm git
arch-chroot /mnt \
  bash -c \
    "su $userName -c \
      \" \
      cd /home/$userName && \
      git clone https://aur.archlinux.org/yay.git && \
      cd yay && \
      makepkg -si --noconfirm && \
      rm -rf yay \
      \" \
    "

greenEcho "Installing applications..."
  arch-chroot /mnt pacman -Syu --noconfirm \
  alacritty \
  arandr \
  blender \
  code \
  cura \
  dunst \
  file-roller \
  firefox \
  fish \
  flameshot \
  gimp \
  git \
  gpick \
  inkscape \
  krita \
  lxappearance \
  maim \
  mlocate \
  moreutils \
  mpv \
  neovim \
  npm \
  openscad \
  pcmanfm \
  pinta \
  ranger \
  rclone \
  sxhkd \
  sxiv \
  xclip \
  xorg-xrandr \
  xsel \
  youtube-dl \
  zathura \
  zathura-pdf-poppler

greenEcho "Installing tools..."
arch-chroot /mnt pacman -Syu --noconfirm \
  fzf \
  inotify-tools \
  mlocate \
  moreutils \
  reflector \
  xdotool

greenEcho "Installing AUR applications..."
arch-chroot /mnt \
  bash -c \
    "su $userName -c \
      \" \
      yay -S --noconfirm \
        google-chrome \
        vim-plug \
        pureref
      \" \
    "

greenEcho "Configuring audio..."
arch-chroot /mnt pacman -Syu --noconfirm pulseaudio pavucontrol
arch-chroot /mnt usermod -a -G audio $userName root

greenEcho "Configuring fonts..."
arch-chroot /mnt \
  bash -c \
    "su $userName -c \
      \"yay -S --noconfirm all-repository-fonts\" \
    "

greenEcho "Adding support for NTFS..."
arch-chroot /mnt pacman -Syu --noconfirm ntfs-3g

greenEcho "Adding picom to fix screen tearing..."
arch-chroot /mnt pacman -Syu --noconfirm picom

greenEcho "Configuring fish..."
arch-chroot /mnt pacman -Syu --noconfirm fish
arch-chroot /mnt chsh -s /usr/bin/fish $userPassword

greenEcho "Configuring autohide cursor..."
arch-chroot /mnt pacman -Syu --noconfirm unclutter

greenEcho "Configuring automout drives..."
arch-chroot /mnt pacman -Syu --noconfirm udiskie

greenEcho "Enabling numlock by default..."
arch-chroot /mnt pacman -Syu --noconfirm numlockx

greenEcho "Configuring XDG user directories..."
arch-chroot /mnt pacman -Syu --noconfirm xdg-user-dirs
arch-chroot /mnt \
  bash -c \
    "su $userName -c \
      \"xdg-user-dirs-update\" \
    "


greenEcho "Installation completed!"

#todo:
  #syncronize clocks
  #gtk and qt
  #disable action when lid closes
  #swap file
  #hibernation
  #lts kernel
  #screen brightness
  #ssh
  #spell checker
  #npm without sudo
  #emojis
  #nvidia
  #fish (fish_update_completions)
